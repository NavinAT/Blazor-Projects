@inject IJSRuntime JsRuntime
@page "/callingcsmethod"

<h3>Invoke C# Method from JS file</h3>
<button id="AlertButton" type="button" class="btn btn-primary" @onclick="@CallJSMethod">Call C# Method</button>
<button id="AlertButton" type="button" class="btn btn-primary" @onclick="@IncrementCountJavaScript">Call Instance C# method</button>
<br />
<hr />

@if(!string.IsNullOrEmpty(Message))
{
    <div class="alert alert-success" role="alert">
        @Message
    </div>
}

@code {
    public static string Message { get; set; }
    
    private void CallJSMethod()
    {
        JsRuntime.InvokeVoidAsync("JSMethod");
    }

    [JSInvokable]
    public static void CSCallBackMethod()
    {
        if(string.IsNullOrEmpty(Message))
            Message = string.Empty;

        Message = "C# Method Invoked from JS Method";
    }

    private void IncrementCountJavaScript()
    {
        JsRuntime.InvokeAsync<int>("CallCSharpInstanceMethod", DotNetObjectReference.Create(new JsSample()));
    }

}
